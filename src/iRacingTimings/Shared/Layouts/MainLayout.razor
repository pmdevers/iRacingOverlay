@using ElectronNET.API

@using iRacingTimings.Shared.Components
@inherits LayoutComponentBase

<BFUTheme>
<BFULayerHost Style="display:flex; flex-direction: column;width:100vw">

<AppBar AppIcon="/img/stopwatch.svg"
        OnClose="@Close"
        OnMinimize="@Minimize"
        OnMaximize="@Maximize"
        IsMaximizable="IsMaximizable"
        MaximizeBox="@(_window != null)"
        MinimizeBox="@(_window != null)">
    iRacingTimings
</AppBar>

@Body
    

</BFULayerHost>
</BFUTheme>

@code
{
    private BrowserWindow _window;
    private bool IsMaximizable;
    
    protected override void OnInitialized()
    {
        _window = Electron.WindowManager.BrowserWindows.FirstOrDefault();
    }

    private async Task Maximize()
    {
        if (_window == null)
        {
            return;
        }
        IsMaximizable = await _window.IsMaximizableAsync();

        if (IsMaximizable)
        {
            _window.Maximize();
        }
        else
        {
            _window.Restore();   
        }

        StateHasChanged();
    }

    private void Minimize()
    {
        _window?.Minimize();
    }

    private void Close()
    {
        if (_window == null)
        {
            return;
        }
        Electron.App.Exit();
    }
}
